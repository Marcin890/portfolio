{"version":3,"sources":["Components/Footer.js","Components/Navigation.js","Components/Portfolio.js","Components/About.js","Components/Contact.js","Components/Project.js","Components/Page.js","Components/App.js","serviceWorker.js","index.js"],"names":["Footer","className","navItems","name","path","Navigation","state","isExpanded","navList","map","item","activeClassName","id","to","onClick","menuClose","e","this","setState","menuToggle","src","alt","Component","Portfolio","items","data","visible","selectedOption","desktopViewport","window","matchMedia","categoryList","value","label","changeVieport","loadMore","viewport","changeFilter","console","log","getPortfolioItems","url","sort","a","b","rating","filter","category_slug","slice","gallery","category","loading","min","max","Math","round","random","addListener","portfolioGrid","onChange","options","placeholder","styles","colourStyles","TransitionGroup","CSSTransition","appear","timeout","classNames","key","About","Contact","href","Project","photoIndex","isOpen","project","props","match","params","images","projectView","it","index","link","target","rel","employer","date","task","technology","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","React","Page","exact","component","App","basename","process","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b820fda5.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Footer = () => {\r\n  return (\r\n    <>\r\n      <p className=\"footer__text\">Copyright 2020 Marcin Kośka</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst navItems = [\r\n  {\r\n    name: \"Portfolio\",\r\n    path: \"/\",\r\n  },\r\n  {\r\n    name: \"O mnie\",\r\n    path: \"/about\",\r\n  },\r\n  {\r\n    name: \"Kontakt\",\r\n    path: \"/contact\",\r\n  },\r\n];\r\n\r\nclass Navigation extends Component {\r\n  state = {\r\n    isExpanded: false,\r\n  };\r\n\r\n  navList = navItems.map((item) => (\r\n    <li className=\"nav__list-item\">\r\n      <NavLink\r\n        activeClassName=\"active\"\r\n        id={item.name}\r\n        to={item.path}\r\n        onClick={() => this.menuClose()}\r\n      >\r\n        {item.name}\r\n      </NavLink>\r\n    </li>\r\n  ));\r\n\r\n  menuToggle(e) {\r\n    this.setState({\r\n      isExpanded: !this.state.isExpanded,\r\n    });\r\n  }\r\n\r\n  menuClose(e) {\r\n    this.setState({\r\n      isExpanded: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isExpanded } = this.state;\r\n    return (\r\n      <nav className={`nav ${isExpanded ? \"nav__mobile\" : \"\"}`}>\r\n        <NavLink to=\"/\" onClick={() => this.menuClose()}>\r\n          <h1 className=\"header__title\">\r\n            Marcin <span className=\"grey\">Kośka</span>\r\n          </h1>\r\n        </NavLink>\r\n        <button className=\"nav__toggle\" onClick={() => this.menuToggle()}>\r\n          {!isExpanded ? (\r\n            <img className=\"nav__toggle-image\" src=\"menu-icon.svg\" alt=\"\" />\r\n          ) : (\r\n            <img\r\n              className=\"nav__toggle-image\"\r\n              src=\"menu-icon-closed.svg\"\r\n              alt=\"\"\r\n            />\r\n          )}\r\n        </button>\r\n        <ul\r\n          className={`nav__list--collapsed ${\r\n            isExpanded ? \"nav__list--is-expanded\" : \"\"\r\n          }`}\r\n        >\r\n          {this.navList}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../Data/portfolio.json\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Select from \"react-select\";\r\nclass Portfolio extends Component {\r\n  state = {\r\n    items: data,\r\n    visible: 6,\r\n    selectedOption: \"all\",\r\n  };\r\n\r\n  desktopViewport = window.matchMedia(\"screen and (min-width:640px)\");\r\n\r\n  categoryList = [\r\n    { value: \"all\", label: \"Wszystkie\" },\r\n    { value: \"www\", label: \"Strony Internetowe\" },\r\n    { value: \"book-cover\", label: \"Okładki książek\" },\r\n    { value: \"book-layout\", label: \"Layouty książek\" },\r\n    { value: \"magazine\", label: \"Czasopisma\" },\r\n    { value: \"ad\", label: \"Reklama\" },\r\n    { value: \"ebook\", label: \"Ebooki\" },\r\n  ];\r\n\r\n  changeVieport = () => {\r\n    this.setState({\r\n      visible: 6,\r\n    });\r\n  };\r\n\r\n  loadMore = () => {\r\n    this.setState({\r\n      visible: this.state.visible + 6,\r\n      viewport: \"\",\r\n    });\r\n  };\r\n\r\n  changeFilter = (selectedOption) => {\r\n    this.setState({ selectedOption });\r\n    console.log(`Option selected:`, selectedOption);\r\n  };\r\n\r\n  randomImage(min, max) {\r\n    return Math.round(Math.random() * (max - min) + min);\r\n  }\r\n\r\n  getPortfolioItems = () => {\r\n    let url;\r\n    const portfolioItems = this.state.items\r\n      // .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n      .sort((a, b) => b.rating - a.rating)\r\n      .filter((item) =>\r\n        this.state.selectedOption === \"all\" ||\r\n        this.state.selectedOption.value === \"all\"\r\n          ? 1\r\n          : item.category_slug === this.state.selectedOption.value\r\n      )\r\n      .slice(0, this.state.visible)\r\n      .map((item) => {\r\n        // url = `${item.category_slug}/${\r\n        //   item.gallery[this.randomImage(0, item.gallery.length - 1)]\r\n        // }`;\r\n        url = `${item.category_slug}/${item.gallery[0]}`;\r\n        return (\r\n          <div className=\"portfolio__item\">\r\n            <div className=\"portfolio__inner\">\r\n              <div className=\"portfolio__overlay\">\r\n                <p className=\"portfolio__category\">{item.category}</p>\r\n                <h2 className=\"portfolio__title\">{item.name}</h2>\r\n                <Link className=\"portfolio__btn-view\" to={`/${item.id}`}>\r\n                  Zobacz\r\n                </Link>\r\n              </div>\r\n\r\n              <img src={`${url}_640.png`} alt=\"\" loading=\"lazy\" />\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    return portfolioItems;\r\n  };\r\n\r\n  // colourStyles = {\r\n  //   option: (styles) => ({\r\n  //     marginBottom: \"10px\",\r\n  //   }),\r\n  // };\r\n  render() {\r\n    this.desktopViewport.addListener(this.changeVieport);\r\n    const portfolioGrid = this.getPortfolioItems();\r\n    const { selectedOption } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"portfolio__filter\">\r\n          {\" \"}\r\n          <Select\r\n            value={selectedOption}\r\n            onChange={this.changeFilter}\r\n            options={this.categoryList}\r\n            placeholder=\"Kategorie\"\r\n            styles={this.colourStyles}\r\n          />\r\n        </div>\r\n\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            appear={true}\r\n            timeout={600}\r\n            classNames=\"fade\"\r\n            key={this.state.selectedOption}\r\n          >\r\n            <div className=\"portfolio\">{portfolioGrid}</div>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <button onClick={this.loadMore} className=\"portfolio__btn\">\r\n          Więcej\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about\">\r\n      <h2 className=\"about__title\">O mnie</h2>\r\n      <p className=\"about__text\">\r\n        Jestem absolwentem historii i edytorstwa na Uniwersytecie Jagiellońskim.\r\n        Od kilku lat pracuję w branży wydawniczej. Projektuję okładki i layouty\r\n        książek oraz czasopism, zajmuję się składem i przygotowaniem publikacji\r\n        do druku. Specjalizuję się również w konwersji publikacji do formatów\r\n        elektronicznych. Prowadzę ćwiczenia na UJ związane z tą tematyką.\r\n      </p>\r\n      <p className=\"about__text\">\r\n        Zajmuję się także projektowaniem grafiki reklamowej (druk i digital) dla\r\n        różnorodnych branż. Potrafię przygotować banery do social mediów,\r\n        koszulki, torby reklamowe, billboardy, reklamy prasowe, wizytówki oraz\r\n        ulotki.\r\n      </p>\r\n\r\n      <p className=\"about__text\">\r\n        Ukończyłem studia podyplomowe z programowania aplikacji webowych na AGH.\r\n        Zajmuję się projektowaniem, wdrażaniem oraz administrowaniem stron i\r\n        sklepów internetowych. Pewniej czuję się we frontendzie, ale kwestie\r\n        backendowe nie są mi obce.\r\n      </p>\r\n      <h2 className=\"about__title about__title--separate\">Umiejętności</h2>\r\n      <p className=\"about__text\">\r\n        <strong>Programy graficzne:</strong> InDesign, QuarkXPress, Photoshop,\r\n        Illustrator, CorelDRAW, Premiere Pro,Adobe Acrobat.\r\n      </p>\r\n      <p className=\"about__text\">\r\n        <strong>Programowanie:</strong> HTML, CSS, Sass, BEM, JS, React, Npm,\r\n        Webpack, Wordpress, Open Journal System.\r\n      </p>\r\n      <p className=\"about__text\">\r\n        <strong>Języki:</strong> angielski B2.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nconst Contact = () => {\r\n  return (\r\n    <div className=\"contact\">\r\n      <h2 className=\"contact__title\">Kontakt</h2>\r\n      <p className=\"contact__text\">\r\n        Jeśli jesteś zainteresowany współpracą - skontaktuj się ze mną. Z chęcią\r\n        odpowiem na Twoje pytania.\r\n      </p>\r\n\r\n      <p className=\"contact__text\">\r\n        <a href=\"mailto:m.koska2@wp.pl\">m.koska2@wp.pl</a>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../Data/portfolio.json\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\n\r\nclass Project extends React.Component {\r\n  state = {\r\n    photoIndex: 0,\r\n    isOpen: false,\r\n  };\r\n\r\n  project = data.filter((item) => item.id == this.props.match.params.id);\r\n  images = this.project[0].gallery.map((item) => {\r\n    return `${this.project[0].category_slug}/${item}.png`;\r\n  });\r\n  projectView = this.project.map((item) => (\r\n    <div className=\"project\">\r\n      <div className=\"project__gallery\">\r\n        {item.gallery.map((it, index) => {\r\n          let url = `${item.category_slug}/${it}.png`;\r\n          return (\r\n            <div className=\"project__item\">\r\n              {/* <img src={`portfolio/${url}`} alt=\"\" /> */}\r\n              <img\r\n                src={`${url}`}\r\n                alt=\"\"\r\n                loading=\"lazy\"\r\n                onClick={() =>\r\n                  this.setState({ isOpen: true, photoIndex: index })\r\n                }\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"project__description\">\r\n        <h2 className=\"project__title\">{item.name}</h2>\r\n        {item.link ? (\r\n          <p className=\"project__desc-link\">\r\n            <a href={item.link} target=\"_blank\" rel=\"nooreferer\">\r\n              Zobacz stronę\r\n            </a>\r\n          </p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <p className=\"project__desc-header\">Zleceniodawca:</p>\r\n        <p className=\"project__desc-text\"> {item.employer}</p>\r\n        <p className=\"project__desc-header\">Data wykonania:</p>\r\n        <p className=\"project__desc-text\">{item.date}</p>\r\n        <p className=\"project__desc-header\">Opis:</p>\r\n        <p className=\"project__desc-text\"> {item.task}</p>\r\n        {item.technology ? (\r\n          <>\r\n            <p className=\"project__desc-header\">Technologie:</p>\r\n            <p className=\"project__desc-text\">{item.technology}</p>\r\n          </>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  ));\r\n  render() {\r\n    const { photoIndex, isOpen } = this.state;\r\n    console.log(this.images);\r\n    console.log(this.project[0].category_slug);\r\n    return (\r\n      <>\r\n        <div>\r\n          {isOpen && (\r\n            <Lightbox\r\n              mainSrc={this.images[photoIndex]}\r\n              nextSrc={this.images[(photoIndex + 1) % this.images.length]}\r\n              prevSrc={\r\n                this.images[\r\n                  (photoIndex + this.images.length - 1) % this.images.length\r\n                ]\r\n              }\r\n              onCloseRequest={() => this.setState({ isOpen: false })}\r\n              onMovePrevRequest={() =>\r\n                this.setState({\r\n                  photoIndex:\r\n                    (photoIndex + this.images.length - 1) % this.images.length,\r\n                })\r\n              }\r\n              onMoveNextRequest={() =>\r\n                this.setState({\r\n                  photoIndex: (photoIndex + 1) % this.images.length,\r\n                })\r\n              }\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {this.projectView}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Project;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Portfolio from \"./Portfolio\";\r\nimport About from \"./About\";\r\nimport Contact from \"./Contact\";\r\nimport Project from \"./Project\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nconst Page = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={Portfolio} />} />\r\n    <Route path=\"/about\" exact component={About} />} />\r\n    <Route path=\"/contact\" exact component={Contact} />} />\r\n    <Route path=\"/:id\" component={Project} />} />\r\n  </Switch>\r\n);\r\n\r\nexport default Page;\r\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Navigation from \"./Navigation\";\nimport Page from \"./Page\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"../Styles/App.scss\";\nimport \"../Styles/Animations.css\";\nimport ScrollToTop from \"react-router-scroll-top\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <ScrollToTop>\n        <div className=\"app\">\n          <div className=\"wrapper\">\n            <header className=\"header\">{<Navigation />}</header>\n            <main>\n              <Page />\n            </main>\n          </div>\n          <footer className=\"footer\">{<Footer />}</footer>\n        </div>\n      </ScrollToTop>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}